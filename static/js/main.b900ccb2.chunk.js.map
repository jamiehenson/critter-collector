{"version":3,"sources":["img/sand.png","img/grass.png","img/water.png","ducks/actions.ts","utils/critters.tsx","ducks/reducers.ts","CellWrapper.tsx","Cell.tsx","BattleUI.tsx","utils/theme.tsx","UI.tsx","World.tsx","App.tsx","ducks/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","Actions","UPDATE_PLAYER_POSITION","ADD_CRITTER_TO_WORLD","ADD_CRITTER_TO_PLAYER","ADVANCE_FROM_BATTLE","REMOVE_CRITTER_FROM_WORLD","UPDATE_ACTIVE_CRITTER_FIGHTER","START_GAME","INCREASE_CRITTER_LEVEL","ADD_CLINIC_TO_WORLD","updatePlayerPosition","key","type","payload","addCritterToWorld","addCritterToPlayer","critter","removeCritterFromWorld","updateActiveCritterFighter","startGame","increaseCritterLevel","addClinicToWorld","typeModifiers","fire","water","grass","critters","critterId","name","icon","gameReducer","state","action","ACTIONS","player","position","direction","battle","playerCritters","world","worldSize","clinic","ui","gameState","active","checkObstruction","axis","polarity","perpendicularAxis","critterPresence","find","clinicPresence","obstructions","up","down","left","right","includes","x","y","Math","max","min","nearbyCritters","filter","xDiff","abs","yDiff","combatant","xDiffToClinic","yDiffToClinic","nearToClinic","newCritters","map","healthPoints","fullHealthPoints","newState","Object","assign","xPos","floor","random","yPos","newHealthPoints","newCritterState","id","critterCounter","combatPoints","level","ceil","randomCritter","allCritters","length","push","critterMatch","activeFighter","newNearbyCritters","newWorldCritters","nearbyCritterMatch","worldCritterMatch","splice","indexOf","unobstructed","clinicState","critterPositionMatch","playerPositionMatch","StyledCellWrapper","styled","div","connect","dispatch","cells","cellSize","edgeCellPosition","positionStyling","marginLeft","marginTop","useEffect","window","addEventListener","e","keyCode","removeEventListener","style","StyledCell","scalingFactor","flipCell","sandEdgeCells","playerCell","sandEdgeCell","clinicCell","top","backgroundImage","sand","cellLabel","flippedCell","computeBattle","you","them","battleLog","yourGo","attack","titleisedName","log","playerLoss","advanceFromBattle","yourCritter","useState","setBattle","tempBattle","aliveCritters","levelText","theirCritter","charAt","toUpperCase","slice","toLowerCase","typeIcon","getTypeIcon","StyledBattleUI","scaling","FightIntro","CritterIcon","className","FightScreen","logItem","i","UIButton","onClick","theme","colours","grey","purple","FooterUI","StyledFooterUI","ClinicNote","CritterList","danceAnimation","keyframes","StyledMenuUI","css","letterHues","button","ConnectedMenuUI","text","role","aria-label","ConnectedEndUI","location","reload","StyledWorld","critterMaxPopulation","cellRow","j","initialState","cellRowSize","reduxStore","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","StyledApp","DecorativeWrapper","App","store","color","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b900ccb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sand.320ecf95.png\";","module.exports = __webpack_public_path__ + \"static/media/grass.8eb8a5fb.png\";","module.exports = __webpack_public_path__ + \"static/media/water.879caf56.png\";","const Actions = {\n  UPDATE_PLAYER_POSITION: \"UPDATE_PLAYER_POSITION\",\n  ADD_CRITTER_TO_WORLD: \"ADD_CRITTER_TO_WORLD\",\n  ADD_CRITTER_TO_PLAYER: \"ADD_CRITTER_TO_PLAYER\",\n  ADVANCE_FROM_BATTLE: \"ADVANCE_FROM_BATTLE\",\n  REMOVE_CRITTER_FROM_WORLD: \"REMOVE_CRITTER_FROM_WORLD\",\n  UPDATE_ACTIVE_CRITTER_FIGHTER: \"UPDATE_ACTIVE_CRITTER_FIGHTER\",\n  START_GAME: \"START_GAME\",\n  INCREASE_CRITTER_LEVEL: \"INCREASE_CRITTER_LEVEL\",\n  ADD_CLINIC_TO_WORLD: \"ADD_CLINIC_TO_WORLD\"\n};\n\nexport const updatePlayerPosition = (key?) => ({\n  type: Actions.UPDATE_PLAYER_POSITION,\n  payload: key\n});\n\nexport const addCritterToWorld = () => ({\n  type: Actions.ADD_CRITTER_TO_WORLD\n})\n\nexport const addCritterToPlayer = (critter?) => ({\n  type: Actions.ADD_CRITTER_TO_PLAYER,\n  payload: critter\n})\n\nexport const advanceFromBattle = () => ({\n  type: Actions.ADVANCE_FROM_BATTLE\n})\n\nexport const removeCritterFromWorld = (critter) => ({\n  type: Actions.REMOVE_CRITTER_FROM_WORLD,\n  payload: critter\n})\n\nexport const updateActiveCritterFighter = (critter) => ({\n  type: Actions.UPDATE_ACTIVE_CRITTER_FIGHTER,\n  payload: critter\n})\n\nexport const startGame = () => ({\n  type: Actions.START_GAME\n})\n\nexport const increaseCritterLevel = (critter) => ({\n  type: Actions.INCREASE_CRITTER_LEVEL,\n  payload: critter\n})\n\nexport const addClinicToWorld = () => ({\n  type: Actions.ADD_CLINIC_TO_WORLD\n})\n\nexport default {\n  updatePlayerPosition,\n  addCritterToWorld,\n  addCritterToPlayer,\n  removeCritterFromWorld,\n  updateActiveCritterFighter,\n  startGame,\n  increaseCritterLevel,\n  addClinicToWorld,\n  Actions\n};","const critters = [\n  {\n    critterId: 1,\n    name: \"dog\",\n    type: \"fire\",\n    icon: \"🐶\"\n  },\n  {\n    critterId: 2,\n    name: \"cat\",\n    type: \"fire\",\n    icon: \"🐱\"\n  },\n  {\n    critterId: 3,\n    name: \"mouse\",\n    type: \"grass\",\n    icon: \"🐭\"\n  },\n  {\n    critterId: 4,\n    name: \"rabbit\",\n    type: \"grass\",\n    icon: \"🐰\"\n  },\n  {\n    critterId: 5,\n    name: \"gerbil\",\n    type: \"grass\",\n    icon: \"🐹\"\n  },\n  {\n    critterId: 6,\n    name: \"fox\",\n    type: \"water\",\n    icon: \"🦊\"\n  },\n  {\n    critterId: 7,\n    name: \"bear\",\n    type: \"water\",\n    icon: \"🐻\"\n  },\n  {\n    critterId: 8,\n    name: \"panda\",\n    type: \"water\",\n    icon: \"🐼\"\n  },\n  {\n    critterId: 9,\n    name: \"koala\",\n    type: \"water\",\n    icon: \"🐨\"\n  },\n  {\n    critterId: 10,\n    name: \"tiger\",\n    type: \"fire\",\n    icon: \"🐯\"\n  },\n  {\n    critterId: 11,\n    name: \"lion\",\n    type: \"fire\",\n    icon: \"🦁\"\n  },\n  {\n    critterId: 12,\n    name: \"cow\",\n    type: \"grass\",\n    icon: \"🐮\"\n  },\n  {\n    critterId: 13,\n    name: \"pig\",\n    type: \"grass\",\n    icon: \"🐷\"\n  },\n  {\n    critterId: 14,\n    name: \"frog\",\n    type: \"water\",\n    icon: \"🐸\"\n  },\n  {\n    critterId: 15,\n    name: \"monkey\",\n    type: \"fire\",\n    icon: \"🐵\"\n  }\n]\n\nexport const typeModifiers = {\n  fire: { fire: 1, water: 0.5, grass: 1.5 },\n  water: { fire: 1.5, water: 1, grass: 0.5 },\n  grass: { fire: 0.5, water: 1.5, grass: 1 }\n}\n\nexport default critters","import ACTIONS from \"./actions\";\nimport allCritters from \"../utils/critters\";\n\nconst gameReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.Actions.UPDATE_PLAYER_POSITION: {\n      const key = action.payload;\n      let { position, direction, battle, critters: playerCritters } = state.player\n      const { worldSize, critters, clinic } = state.world\n\n      if (state.ui.gameState !== \"play\" || battle.active) { return state; }\n\n      // Move player if there are no adjacent obstructions\n      const checkObstruction = (axis, polarity) => {\n        const perpendicularAxis = axis === \"x\" ? \"y\" : \"x\"\n        const critterPresence = critters.find((critter) => (\n          critter.position[perpendicularAxis] === position[perpendicularAxis] && critter.position[axis] === position[axis] - polarity\n        ))\n        const clinicPresence = position[perpendicularAxis] === clinic[perpendicularAxis] && position[axis] === clinic[axis] - polarity\n        return critterPresence || clinicPresence\n      }\n\n      const obstructions = {\n        up: checkObstruction(\"y\", -1),\n        down: checkObstruction(\"y\", 1),\n        left: checkObstruction(\"x\", -1),\n        right: checkObstruction(\"x\", 1)\n      }\n\n      if (key) {\n        if ([\"w\", \"ArrowUp\", \"87\", \"38\"].includes(key)) {\n          if (!obstructions.up) {\n            position = { x: position.x, y: Math.max(position.y - 1, 0) };\n          }\n          direction = \"up\";\n        } else if ([\"s\", \"ArrowDown\", \"83\", \"40\"].includes(key)) {\n          if (!obstructions.down) {\n            position = { x: position.x, y: Math.min(position.y + 1, worldSize - 1) };\n          }\n          direction = \"down\";\n        } else if ([\"a\", \"ArrowLeft\", \"65\", \"37\"].includes(key)) {\n          if (!obstructions.left) {\n            position = { x: Math.max(position.x - 1, 0), y: position.y };\n          }\n          direction = \"left\";\n        } else if ([\"d\", \"ArrowRight\", \"68\", \"39\"].includes(key)) {\n          if (!obstructions.right) {\n            position = { x: Math.min(position.x + 1, worldSize - 1), y: position.y };\n          }\n          direction = \"right\";\n        }\n      }\n\n      // Detection of critter proximity\n      const nearbyCritters = critters.filter((critter) => {\n        const xDiff = Math.abs((position as any).x - critter.position.x)\n        const yDiff = Math.abs((position as any).y - critter.position.y)\n        if (xDiff <= 1 && yDiff <= 1) {\n          battle.active = true\n          battle.combatant = critter\n          return true\n        } else if (xDiff <= 2 && yDiff <= 2) {\n          battle.active = false\n          return true\n        }\n        return false\n      })\n\n      // Clinic health recharging\n      const xDiffToClinic = Math.abs((position as any).x - clinic.x)\n      const yDiffToClinic = Math.abs((position as any).y - clinic.y)\n      const nearToClinic = xDiffToClinic <= 1 && yDiffToClinic <= 1\n      const newCritters = nearToClinic ? [...playerCritters].map((critter) => ({ ...critter, healthPoints: critter.fullHealthPoints })) : playerCritters\n\n      const newState = {\n        player: { ...state.player, position, direction, nearbyCritters, battle, critters: newCritters },\n        ui: { ...state.ui, clinic: nearToClinic }\n      }\n\n      return Object.assign({}, state, newState);\n    }\n    case ACTIONS.Actions.ADD_CRITTER_TO_WORLD: {\n      const xPos = Math.floor(Math.random() * state.world.worldSize)\n      const yPos = Math.floor(Math.random() * state.world.worldSize)\n      const newCritters = state.world.critters\n      const newHealthPoints = Math.floor(Math.random() * 100 + 50)\n      const newCritterState = {\n        id: state.world.critterCounter,\n        position: { x: xPos, y: yPos },\n        healthPoints: newHealthPoints,\n        fullHealthPoints: newHealthPoints,\n        combatPoints: Math.floor(Math.random() * 20 + 20),\n        level: Math.ceil(Math.random() * 3)\n      }\n      const randomCritter = Object.assign({}, allCritters[Math.floor(Math.random() * allCritters.length)], newCritterState)\n      newCritters.push(randomCritter)\n      return Object.assign({}, state, {\n        world: { ...state.world, critterCounter: state.world.critterCounter + 1, critters: newCritters }\n      })\n    }\n    case ACTIONS.Actions.ADD_CRITTER_TO_PLAYER: {\n      const newCritters = state.player.critters\n\n      if (action.payload) {\n        const critterMatch = [...state.world.critters].find((critter) => critter.id === action.payload.id)\n        critterMatch.activeFighter = false\n        delete critterMatch.position\n        newCritters.push(critterMatch)\n      } else {\n        const newHealthPoints = Math.floor(Math.random() * 100 + 50)\n        const newCritterState = {\n          id: state.world.critterCounter,\n          healthPoints: newHealthPoints,\n          fullHealthPoints: newHealthPoints,\n          combatPoints: Math.floor(Math.random() * 20 + 20),\n          level: Math.ceil(Math.random() * 3),\n          activeFighter: newCritters.length === 0\n        }\n        const randomCritter = Object.assign({}, allCritters[Math.floor(Math.random() * allCritters.length)], newCritterState)\n        newCritters.push(randomCritter)\n      }\n\n      return Object.assign({}, state, { player: { ...state.player, critters: newCritters }, world: { ...state.world, critterCounter: state.world.critterCounter + 1 } })\n    }\n    case ACTIONS.Actions.ADVANCE_FROM_BATTLE: {\n      if (state.player.critters.find((critter) => critter.healthPoints > 0)) {\n        return Object.assign({}, state, { player: { ...state.player, battle: { active: false, combatant: null } } })\n      } else {\n        return Object.assign({}, state, { player: { ...state.player, battle: { active: false, combatant: null } }, ui: { ...state.ui, gameState: \"end\" } })\n      }\n    }\n    case ACTIONS.Actions.REMOVE_CRITTER_FROM_WORLD: {\n      const newNearbyCritters = [...state.player.nearbyCritters]\n      const newWorldCritters = [...state.world.critters]\n      const nearbyCritterMatch = newNearbyCritters.find((critter) => critter.id === action.payload.id)\n      const worldCritterMatch = newWorldCritters.find((critter) => critter.id === action.payload.id)\n      if (worldCritterMatch && nearbyCritterMatch) {\n        newNearbyCritters.splice(newNearbyCritters.indexOf(nearbyCritterMatch), 1)\n        newWorldCritters.splice(newWorldCritters.indexOf(worldCritterMatch), 1)\n        return Object.assign({}, state, {\n          world: { ...state.world, critters: newWorldCritters },\n          player: { ...state.player, nearbyCritters: newNearbyCritters }\n        })\n      } else {\n        return state\n      }\n    }\n    case ACTIONS.Actions.UPDATE_ACTIVE_CRITTER_FIGHTER: {\n      const newCritters = [...state.player.critters].map((critter) => ({ ...critter, activeFighter: critter.id === action.payload.id }))\n      return Object.assign({}, state, { player: { ...state.player, critters: newCritters } })\n    }\n    case ACTIONS.Actions.START_GAME: {\n      return Object.assign({}, state, { ui: { ...state.ui, gameState: \"play\" } })\n    }\n    case ACTIONS.Actions.INCREASE_CRITTER_LEVEL: {\n      const newCritters = [...state.player.critters].map((critter) => {\n        if (critter.id === action.payload.id) { critter.level += 1 }\n        return critter\n      })\n      return Object.assign({}, state, { player: { ...state.player, critters: newCritters } })\n    }\n    case ACTIONS.Actions.ADD_CLINIC_TO_WORLD: {\n      let unobstructed = true\n      while (unobstructed) {\n        const candidateX = Math.floor(Math.random() * state.world.worldSize)\n        const candidateY = Math.floor(Math.random() * state.world.worldSize)\n        const clinicState = { x: candidateX, y: candidateY }\n        const critterPositionMatch = state.world.critters.find((critter) => critter.position === clinicState)\n        const playerPositionMatch = state.player.position === clinicState\n        if (!critterPositionMatch && !playerPositionMatch) {\n          unobstructed = false\n          return Object.assign({}, state, { world: { ...state.world, clinic: clinicState } })\n        }\n      }\n      return state\n    }\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;","import React, { Component, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { connect } from \"react-redux\"\n\nimport { updatePlayerPosition } from \"./ducks/actions\"\nimport { PlayerType, WorldType } from \"./utils/types\"\n\ntype CellWrapperProps = {\n  updatePlayerPosition: Function,\n  player: PlayerType,\n  world: WorldType,\n  cells: Component[]\n}\n\nconst CellWrapper: React.FC<CellWrapperProps> = ({ updatePlayerPosition, player, world, cells }) => {\n  const { cellSize, edgeCellPosition } = world\n  const positionStyling = {\n    marginLeft: `${-((player.position.x - edgeCellPosition) * cellSize)}%`,\n    marginTop: `${-((player.position.y - edgeCellPosition) * cellSize)}%`,\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e) => { updatePlayerPosition(e.key || e.keyCode) })\n    return () => {\n      window.removeEventListener(\"keydown\", (e) => { updatePlayerPosition(e.key || e.keyCode) })\n    }\n  }, [updatePlayerPosition]);\n\n  return (\n    <StyledCellWrapper style={positionStyling}>{cells}</StyledCellWrapper>\n  )\n}\n\nconst StyledCellWrapper = styled.div`\n  position: absolute;\n  transition: margin-left 0.1s, margin-top 0.1s;\n  will-change: margin-left, margin-top;\n`\n\nexport default connect(\n  state => ({ world: state.world, player: state.player }),\n  (dispatch) => ({\n    updatePlayerPosition: (key) => dispatch(updatePlayerPosition(key))\n  }))(CellWrapper)","import React from \"react\"\nimport styled from \"styled-components\"\nimport { connect } from \"react-redux\";\n\nimport { CellType } from \"./utils/types\"\nimport sand from \"./img/sand.png\"\nimport grass from \"./img/grass.png\"\n\ntype StyledCellProps = {\n  cellSize: number,\n  scalingFactor: number,\n  flipCell: boolean\n}\n\nconst Cell: React.FC<CellType> = ({ x, y, player, world, ui }) => {\n  const { cellSize, worldSize, sandEdgeCells, critters, clinic } = world\n  const { direction, nearbyCritters } = player\n  const playerCell = player.position.x === x && player.position.y === y\n  const critterMatch = critters.find(critter => critter.position.x === x && critter.position.y === y)\n  const sandEdgeCell = x < 2 || y < 2 || x >= worldSize - sandEdgeCells || y >= worldSize - sandEdgeCells\n  const clinicCell = clinic.x === x && clinic.y === y\n\n  const positionStyling = {\n    left: `${x * cellSize * ui.scalingFactor}vh`,\n    top: `${y * cellSize * ui.scalingFactor}vh`,\n    backgroundImage: `url(${sandEdgeCell ? sand : grass})`\n  }\n\n  let cellLabel = \"\"\n  let flippedCell = false\n  if (playerCell) {\n    if (direction === \"up\" || direction === \"down\") {\n      cellLabel = \"🧍‍♂️\"\n    } else if (direction === \"left\") {\n      cellLabel = \"🚶‍♂️\"\n    } else if (direction === \"right\") {\n      cellLabel = \"🚶‍♂️\"\n      flippedCell = true\n    }\n  } else if (critterMatch && nearbyCritters.find((critter) => critter.id === critterMatch.id)) {\n    cellLabel = critterMatch.icon\n  } else if (clinicCell) {\n    cellLabel = \"🏥\"\n  }\n\n  return (\n    <StyledCell\n      style={positionStyling}\n      cellSize={cellSize}\n      scalingFactor={ui.scalingFactor}\n      flipCell={flippedCell}\n    >\n      {cellLabel}\n    </StyledCell>\n  )\n}\n\nconst StyledCell = styled.div<StyledCellProps>`\n  border: 0.5px solid rgba(0,0,0,0.1);\n  position: absolute;\n  width: ${({ cellSize, scalingFactor }) => cellSize * scalingFactor}vh;\n  height: ${({ cellSize, scalingFactor }) => cellSize * scalingFactor}vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-size: cover;\n  font-size: ${({ cellSize, scalingFactor }) => cellSize * scalingFactor}vh;\n  transform: scale(${({ flipCell }) => flipCell ? -1 : 1}, 1);\n`\n\nexport default connect(\n  state => ({\n    world: state.world,\n    player: state.player,\n    ui: state.ui\n  }),\n  null\n)(Cell)\n\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { connect } from \"react-redux\"\n\nimport { UIProps, UIButton } from \"./UI\"\nimport { addCritterToPlayer, advanceFromBattle, removeCritterFromWorld, updateActiveCritterFighter, increaseCritterLevel } from \"./ducks/actions\"\nimport { typeModifiers } from \"./utils/critters\"\n\ntype StyledBattleUIProps = {\n  scaling: number\n}\n\ninterface BattleUIProps extends UIProps {\n  addCritterToPlayer: Function,\n  advanceFromBattle: Function,\n  removeCritterFromWorld: Function,\n  updateActiveCritterFighter: Function,\n  increaseCritterLevel: Function\n}\n\nconst BattleUI: React.FC<BattleUIProps> = ({ ui, player, advanceFromBattle, addCritterToPlayer, removeCritterFromWorld, updateActiveCritterFighter, increaseCritterLevel }) => {\n  const yourCritter = player.critters.find((critter) => critter.activeFighter)\n\n  const [battle, setBattle] = useState({ log: [\"\"], playerLoss: false })\n\n  useEffect(() => {\n    let tempBattle = computeBattle(you, them)\n    if (tempBattle.playerLoss) {\n      tempBattle.log.push(`${them.titleisedName} wins! Your ${you.titleisedName} faints.`)\n      const aliveCritters = [...player.critters.filter((critter) => critter.healthPoints > 0)]\n      if (aliveCritters.length > 0) {\n        tempBattle.log.push(`Go ${aliveCritters[0].name}!`)\n        updateActiveCritterFighter(aliveCritters[0])\n      } else {\n        tempBattle.log.push(\"All critters have fainted!\")\n      }\n    } else {\n      if (!player.critters.find((critter) => critter.id === them.critter.id)) {\n        addCritterToPlayer(them.critter)\n        removeCritterFromWorld(them.critter)\n      }\n      let levelText = \"\"\n      if (Math.random() >= 0.5) {\n        increaseCritterLevel(you.critter)\n        levelText = `They level up to Lv. ${you.critter.level}.`\n      }\n      tempBattle.log.push(`Your ${you.titleisedName} wins! ${them.titleisedName} caught.` + levelText)\n    }\n    setBattle(tempBattle)\n  }, [])\n\n  if (!yourCritter) {\n    return null;\n  }\n\n  const theirCritter = player.battle.combatant\n  const you = {\n    critter: yourCritter,\n    titleisedName: yourCritter.name.charAt(0).toUpperCase() + yourCritter.name.slice(1).toLowerCase(),\n    typeIcon: getTypeIcon(yourCritter.type)\n  }\n  const them = {\n    critter: theirCritter,\n    titleisedName: theirCritter.name.charAt(0).toUpperCase() + theirCritter.name.slice(1).toLowerCase(),\n    typeIcon: getTypeIcon(theirCritter.type)\n  }\n\n  return (\n    <StyledBattleUI scaling={ui.scalingFactor}>\n      <h2>FIGHT!</h2>\n      <FightIntro>\n        <div>\n          <CritterIcon>\n            <span className=\"icon\">{you.critter.icon}</span>\n            <span className=\"type\">{you.typeIcon}</span>\n          </CritterIcon>\n          <p>{you.titleisedName}</p>\n          <small>Lv. {you.critter.level}</small>\n          <small>(HP: {you.critter.healthPoints * you.critter.level}, CP: {you.critter.combatPoints * you.critter.level})</small>\n        </div>\n        <div>\n          VS\n        </div>\n        <div>\n          <CritterIcon>\n            <span className=\"icon\">{them.critter.icon}</span>\n            <span className=\"type\">{them.typeIcon}</span>\n          </CritterIcon>\n          <p>{them.titleisedName}</p>\n          <small>Lv. {them.critter.level}</small>\n          <small>(HP: {them.critter.healthPoints * them.critter.level}, CP: {them.critter.combatPoints * them.critter.level})</small>\n        </div>\n      </FightIntro>\n      <FightScreen>\n        {battle.log.map((logItem, i) => (\n          <p key={i}>{logItem}</p>\n        ))}\n      </FightScreen>\n      <UIButton onClick={() => advanceFromBattle()}>Advance</UIButton>\n    </StyledBattleUI>\n  )\n}\n\nconst computeBattle = (you, them) => {\n  let battleLog: string[] = []\n  let yourGo: boolean = true\n\n  while (you.critter.healthPoints * you.critter.level > 0 && them.critter.healthPoints * them.critter.level > 0) {\n    if (yourGo) {\n      const attack = you.critter.combatPoints * typeModifiers[you.critter.type][them.critter.type] * you.critter.level\n      battleLog.push(`Your ${you.titleisedName} hits ${them.titleisedName} for (${you.critter.combatPoints * you.critter.level} x ${typeModifiers[you.critter.type][them.critter.type]}) ${attack}!`)\n      them.critter.healthPoints = Math.max(them.critter.healthPoints - attack, 0)\n    } else {\n      const attack = them.critter.combatPoints * typeModifiers[them.critter.type][you.critter.type] * them.critter.level\n      battleLog.push(`${them.titleisedName} hits your ${you.titleisedName} for (${them.critter.combatPoints * them.critter.level} x ${typeModifiers[them.critter.type][you.critter.type]}) ${attack}!`)\n      you.critter.healthPoints = Math.max(you.critter.healthPoints - attack, 0)\n    }\n    yourGo = !yourGo\n  }\n  return { log: battleLog, playerLoss: you.critter.healthPoints === 0 }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addCritterToPlayer: (critter) => dispatch(addCritterToPlayer(critter)),\n  removeCritterFromWorld: (critter) => dispatch(removeCritterFromWorld(critter)),\n  advanceFromBattle: () => dispatch(advanceFromBattle()),\n  updateActiveCritterFighter: (critter) => dispatch(updateActiveCritterFighter(critter)),\n  increaseCritterLevel: (critter) => dispatch(increaseCritterLevel(critter))\n})\n\nexport default connect(null, mapDispatchToProps)(BattleUI)\n\nconst getTypeIcon = (type) => {\n  if (type === \"fire\") {\n    return \"🔥\"\n  } else if (type === \"water\") {\n    return \"💧\"\n  } else if (type === \"grass\") {\n    return \"🌱\"\n  }\n}\n\nconst StyledBattleUI = styled.div<StyledBattleUIProps>`\n  width: calc(100% - 8vh);\n  display: flex;\n  height: calc(${({ scaling }) => 100 * scaling}vh - 11vh - 20vh);\n  position: absolute;\n  top: 0;\n  margin: 2vh;\n  background: rgba(40, 40, 40, 0.75);\n  border-radius: 5px;\n  padding: 2vh;\n  color: white;\n  font-weight: bold;\n  align-items: center;\n  flex-direction: column;\n  font-size: 3vh;\n  text-shadow: 0 0 2px black;\n  p {\n    margin: 0;\n  }\n  h2 {\n    margin: 0 0 2vh 0;\n  }\n`\n\nconst FightIntro = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 20vh;\n  > div {\n    text-align: center;\n    padding: 2vh;\n  }\n  small {\n    display: block;\n    margin-top: 1vh;\n    font-size: 1.2vh;\n  }\n`\n\nconst FightScreen = styled.div`\n  width: 100%;\n  flex: 1;\n  overflow-y: auto;\n  background: rgba(40, 40, 40, 0.75);\n  margin: 2vh 0;\n  p {\n    font-size: 1.2vh;\n    margin: 1vh;\n  }\n`\n\nconst CritterIcon = styled.div`\n  font-size: 8vh;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto 2vh;\n  width: 8vh;\n  height: 8vh;\n  border-radius: 5px;\n  .type {\n    position: absolute;\n    font-size: 3vh;\n    bottom: 0;\n    right: 0;\n  }\n`\n","const theme = {\n  colours: {\n    grey: \"#333333\",\n    purple: \"#7851a9\"\n  }\n}\n\nexport default theme","import React from \"react\"\nimport styled, { keyframes } from \"styled-components\"\nimport { connect } from \"react-redux\"\nimport { Wave } from \"react-animated-text\"\n\nimport BattleUI from \"./BattleUI\"\nimport { PlayerType, UIType } from \"./utils/types\"\nimport theme from \"./utils/theme\"\nimport { startGame } from \"./ducks/actions\"\n\nexport type UIProps = {\n  player: PlayerType,\n  ui: UIType\n}\n\ninterface MenuUIProps extends UIProps {\n  startGame: Function\n}\n\nconst UI: React.FC<UIProps> = ({ player, ui }) => {\n  return (\n    <>\n      {ui.gameState === \"menu\" && <ConnectedMenuUI />}\n      {ui.gameState === \"end\" && <ConnectedEndUI />}\n      {player.battle.active && <BattleUI player={player} ui={ui} />}\n      <FooterUI player={player} ui={ui} />\n    </>\n  )\n}\n\nconst MenuUI: React.FC<MenuUIProps> = ({ startGame }) => {\n  return (\n    <StyledMenuUI>\n      <h1><Wave text=\"CRITTER COLLECTOR!\" /></h1>\n      <div className=\"bigIconMenu\">\n        <span role=\"img\" aria-label=\"Critter Collector\">🏆</span>\n        <span role=\"img\" aria-label=\"Critter Collector\">😻</span>\n        <span role=\"img\" aria-label=\"Critter Collector\">🏆</span>\n      </div>\n      <UIButton onClick={() => startGame()}>LET'S GO!</UIButton>\n      <small>(use the arrow keys or WASD to move around)</small>\n    </StyledMenuUI>\n  )\n}\n\nconst EndUI: React.FC<MenuUIProps> = ({ startGame }) => {\n  return (\n    <StyledMenuUI>\n      <h2>Game Over!</h2>\n      <p>Oh no! All your Critters have fainted. Watch out for the higher leveled Critters of dangerous types, and make sure to use the Clinic to heal injured/fainted Critters.</p>\n      <div className=\"bigIconEnd\"><span role=\"img\" aria-label=\"Game Over\">😿</span></div>\n      <UIButton onClick={() => window.location.reload()}>LET'S GO AGAIN!</UIButton>\n    </StyledMenuUI>\n  )\n}\n\nconst FooterUI: React.FC<UIProps> = ({ player, ui }) => {\n  const { critters, nearbyCritters } = player\n  return (\n    <StyledFooterUI>\n      <div>\n        {ui.clinic && <ClinicNote>All Critters fully healed!</ClinicNote>}\n        <h3>Your Critters ({critters.length})</h3>\n        <CritterList>\n          {critters.map((critter) => (\n            <div key={critter.id}>\n              <span className=\"icon\">\n                <span className=\"icon-image\">{critter.icon}</span>\n                <span className=\"active\">{critter.activeFighter ? \"✅\" : \"\"}</span>\n              </span>\n              <span className=\"stats\">\n                <p>LV: {critter.level}</p>\n                <p>HP: {critter.healthPoints * critter.level}</p>\n              </span>\n            </div>\n          ))}\n        </CritterList>\n      </div>\n      <div>\n        <h3>Nearby ({nearbyCritters.length})</h3>\n        <CritterList>\n          {nearbyCritters.map((critter) => (\n            <span key={critter.id} className=\"icon\">{critter.icon}</span>\n          ))}\n        </CritterList>\n      </div>\n    </StyledFooterUI>\n  )\n}\n\nconst letterHues = () => {\n  let css = \"\"\n  for (let i = 1; i <= 18; i++) {\n    css += `&:nth-child(${i}) { span { color: hsl(${(i / 18) * 360}, 100%, 50%) } }`\n  }\n  return css\n}\n\nconst danceAnimation = keyframes`\n  0%, 50%, 100% { \n    transform: rotate(0deg); \n  }\n  25% { \n    transform: rotate(30deg); \n  }\n  75% { \n    transform: rotate(-30deg); \n  }\n`\n\nconst StyledMenuUI = styled.div`\n  position: relative;\n  height: calc(100% - 2.5vh);\n  padding: 4vh;\n  color: white;\n  background: rgba(0, 0, 0, 0.9);\n  line-height: 2;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  z-index: 10;\n  text-align: center;\n  h1, h2 {\n    margin-top: 0;\n  }\n  h1 {\n    font-size: 6vh;\n    text-align: center;\n    pointer-events: none;\n    > div span {\n      ${letterHues()}\n      &:nth-child(8) {\n        display: block !important;\n        height: 2vh;\n      }\n    }\n  }\n  .bigIconMenu, .bigIconEnd {\n    font-size: 15vh;\n    width: 15vh;\n    margin: 0;\n    padding: 0;\n    margin-top: -7vh;\n  }\n  .bigIconMenu {\n    width: auto;\n    pointer-events: none;\n    span {\n      margin: 0 1vh;\n      animation: ${danceAnimation} 3s infinite linear;\n      display: inline-block;\n    }\n  }\n  small {\n    margin-top: 3vh;\n    font-size: 1.4vh;\n  }\n`\n\nexport const UIButton = styled.button`\n  -webkit-appearance: none;\n  padding: 1vh 3vh;\n  background: black;\n  border: 0;\n  margin: 1vh;\n  color: white;\n  font-size: 2vh;\n  border-radius: 5px;\n  text-transform: uppercase;\n  font-family: 'Press Start 2P', sans-serif;\n  cursor: pointer;\n  &:hover {\n    background: ${theme.colours.grey};\n  }\n  border: 2px solid white;\n`\n\nconst StyledFooterUI = styled.div`\n  width: calc(100% - 6vh);\n  display: flex;\n  height: 20vh;\n  position: absolute;\n  bottom: 0;\n  margin: 2vh;\n  background: rgba(40, 40, 40, 0.4);\n  border-radius: 5px;\n  padding: 1vh;\n  color: white;\n  font-weight: bold;\n  text-shadow: 0 0 2px black;\n  > div {\n    flex: 1;\n    padding: 2vh;\n    margin: 0.5vh;\n    background: rgba(40, 40, 40, 0.4);\n    border-radius: 5px;\n    &:last-child {\n      width: 20vh;\n      flex: none;\n    }\n  }\n  h3 {\n    margin: 0;\n    font-size: 1.6vh;\n  }\n  p {\n    margin: 0;\n  }\n`\n\nconst CritterList = styled.div`\n  margin-top: 1vh;\n  > div { \n    display: inline-flex;\n    align-items: center;\n    width: calc(100% / 3);\n  }\n  .icon {\n    font-size: 4vh;\n    position: relative;\n    width: 4vh;\n    height: 4vh;\n  }\n  .active {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 1.5vh;\n    height: 1.5vh;\n    font-size: 1.5vh;\n  }\n  .stats {\n    font-size: 1.2vh;\n    line-height: 2vh;\n    margin-left: 1vh;\n  }\n`\n\nconst ClinicNote = styled.div`\n  width: calc(100% - 4vh);\n  background: rgba(255,0,0,0.6);\n  height: calc(100% - 4vh);\n  margin-bottom: calc(-20vh + 5vh);\n  z-index: 2;\n  position: relative;\n  padding: 2vh;\n  display: flex;\n  align-items: center;\n  font-size: 2vh;\n  justify-content: center;\n  border-radius: 5px;\n  text-align: center;\n  line-height: 2;\n`\n\nconst ConnectedMenuUI = connect(null, (dispatch) => ({ startGame: () => dispatch(startGame()) }))(MenuUI)\nconst ConnectedEndUI = connect(null, (dispatch) => ({ startGame: () => dispatch(startGame()) }))(EndUI)\n\nexport default connect((state) => ({ player: state.player, ui: state.ui }))(UI)","import React from \"react\"\nimport styled from \"styled-components\"\nimport { connect } from \"react-redux\"\n\nimport CellWrapper from \"./CellWrapper\"\nimport Cell from \"./Cell\"\nimport UI from \"./UI\"\nimport { addCritterToWorld, addCritterToPlayer, addClinicToWorld, updatePlayerPosition } from \"./ducks/actions\"\nimport water from \"./img/water.png\"\nimport { WorldType, PlayerType } from \"./utils/types\"\nimport theme from \"./utils/theme\"\n\ntype WorldProps = {\n  world: WorldType,\n  player: PlayerType,\n  scalingFactor: number,\n  addCritterToWorld: Function,\n  addCritterToPlayer: Function,\n  addClinicToWorld: Function,\n  updatePlayerPosition: Function\n}\n\ntype StyledWorldProps = {\n  scalingFactor: number,\n  cellSize: number\n}\n\nconst World: React.FC<WorldProps> = ({ world, player, scalingFactor, addCritterToWorld, addCritterToPlayer, addClinicToWorld, updatePlayerPosition }) => {\n  const cells: any[] = []\n  const { worldSize, critterMaxPopulation, cellSize, critters } = world\n  if (!world.clinic) {\n    addClinicToWorld()\n  }\n\n  for (let i = 0; i < critterMaxPopulation; i++) {\n    if (critters.length >= critterMaxPopulation) { break };\n    addCritterToWorld();\n    updatePlayerPosition();\n  }\n\n  if (player.critters.length < 1) {\n    addCritterToPlayer()\n  }\n\n  for (let i = 0; i < worldSize; i++) {\n    let cellRow: any[] = []\n    for (let j = 0; j < worldSize; j++) {\n      cellRow.push(<Cell x={j} y={i} key={`${i}-${j}`} />)\n    }\n    cells.push(cellRow)\n  }\n\n  return (\n    <StyledWorld scalingFactor={scalingFactor} cellSize={cellSize}>\n      <CellWrapper cells={cells}></CellWrapper>\n      <UI></UI>\n    </StyledWorld>\n  )\n}\n\nconst StyledWorld = styled.div<StyledWorldProps>`\n  position: relative;\n  width: ${({ scalingFactor }) => 100 * scalingFactor}vh;\n  height: ${({ scalingFactor }) => 100 * scalingFactor}vh;\n  overflow: hidden;\n  margin: 5vh;\n  border-radius: 5px;\n  border: 10px solid ${theme.colours.grey};\n  background-image: url(${water});\n  background-repeat: repeat;\n  background-size: ${({ cellSize, scalingFactor }) => cellSize * scalingFactor}vh;\n`\n\nexport default connect(\n  state => ({ world: state.world, player: state.player, scalingFactor: state.ui.scalingFactor }),\n  (dispatch) => ({\n    addCritterToWorld: () => dispatch(addCritterToWorld()),\n    addCritterToPlayer: () => dispatch(addCritterToPlayer()),\n    addClinicToWorld: () => dispatch(addClinicToWorld()),\n    updatePlayerPosition: () => dispatch(updatePlayerPosition())\n  })\n)(World)","import React from 'react';\nimport styled from \"styled-components\"\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nimport configureStore from \"./ducks/store\";\nimport World from \"./World\"\nimport theme from \"./utils/theme\"\n\nconst cellRowSize: number = 9\nconst worldSize: number = 27\nconst initialState = {\n  world: {\n    worldSize: worldSize,\n    cellRowSize: cellRowSize,\n    cellSize: 100.0 / cellRowSize,\n    edgeCellPosition: Math.floor(cellRowSize / 2),\n    critterMaxPopulation: 10,\n    sandEdgeCells: 2,\n    critters: [],\n    critterCounter: 1\n  },\n  player: {\n    position: { x: Math.floor(Math.random() * worldSize), y: Math.floor(Math.random() * worldSize) },\n    direction: \"down\",\n    critters: [],\n    nearbyCritters: [],\n    battle: { active: false, combatant: null }\n  },\n  ui: {\n    scalingFactor: 0.8,\n    gameState: \"menu\"\n  }\n};\n\nconst reduxStore = configureStore(initialState);\n\nconst App: React.FC = () => {\n  return (\n    <ReduxProvider store={reduxStore}>\n      <StyledApp>\n        <DecorativeWrapper />\n        <World />\n        <div className=\"title\">\n          <span className=\"critter\">Critter</span>\n          <span className=\"collector\">\n            <span style={{ color: \"pink\" }}>C</span>\n            <span style={{ color: \"cyan\" }}>o</span>\n            <span style={{ color: \"purple\" }}>l</span>\n            <span style={{ color: \"gold\" }}>l</span>\n            <span style={{ color: \"green\" }}>e</span>\n            <span style={{ color: \"red\" }}>c</span>\n            <span style={{ color: \"yellow\" }}>t</span>\n            <span style={{ color: \"orange\" }}>o</span>\n            <span style={{ color: \"blue\" }}>r</span>\n          </span>\n        </div>\n      </StyledApp>\n    </ReduxProvider>\n  );\n}\n\nconst StyledApp = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-color: ${theme.colours.grey};\n  display: flex;\n  justify-content: center;\n  position: relative;\n  align-items: center;\n  flex-direction: column;\n  overflow: hidden;\n  .title {\n    color: white;\n    height: 4.5vh;\n    text-transform: uppercase;\n    position: relative;\n    text-shadow: 0 0 2px black;\n    margin: -6.2vh 0 0;\n    background: ${theme.colours.grey};\n    width: calc(${initialState.ui.scalingFactor * 100}vh + 20px);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1vh 0 2vh;\n    border-radius: 5px;\n    > span:last-child {\n      margin-left: 2vh;\n    }\n  }\n  .critter {\n    font-family: \"Gill Sans\", \"Press Start 2P\", sans-serif;\n    font-style: italic;\n    font-size: 4vh;\n  }\n  .collector {\n    font-family: \"Comic Sans MS\", \"Press Start 2P\", sans-serif;\n    font-size: 3.5vh;\n  }\n`\n\nconst DecorativeWrapper = styled.div`\n  position: absolute;\n  height: 99vh;\n  width: 95vh;\n  background: ${theme.colours.purple};\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  margin-top: 1vh;\n`\n\nexport default App;\n","import { createStore } from \"redux\";\n\nimport reducer from \"./reducers\";\n\ntype ReduxWindow = (typeof window) & {\n  __REDUX_DEVTOOLS_EXTENSION__: Function;\n}\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducer, initialState, (window as ReduxWindow).__REDUX_DEVTOOLS_EXTENSION__ && (window as ReduxWindow).__REDUX_DEVTOOLS_EXTENSION__());\n  return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}